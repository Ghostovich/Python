# Задача Измените код одной-двух решенных ранее задач 
# (с прошлых семинаров или домашних работ), применив лямбды, 
# filter, map, zip, enumerate, списочные выражения.


# Задайте список из n чисел последовательности $(1+\frac 1 n)^n$ 
# и выведите на экран их сумму.

# n = int(input('Введите n:'))
# s=0
# for i in range(1, n):
#     s += (1+(1/i))**i
# print(s)





# # Напишите программу, которая будет 
# # преобразовывать десятичное число в двоичное.
# # Пример:
# # - 45 -> 101101
# # - 3 -> 11
# # - 2 -> 10

N = int(input('Введите число:'))
# sp = []
# while N != 0:
#     sp.append(N%2)
#     N = N//2
# sp.reverse()
# print(*sp, end='')


sp = [i for i in range(N!=0)]








# Напишите программу, которая будет на вход принимать число N и выводить числа от -N до N
# Примеры:
# o	5 -> -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5

# N = int(input("Add number:"))

# for i in range (-N, N+1):
#     print(i, end = " ")




sp = [for i in range (-N, N+1), N = int(input("Add number:"))]
print(sp)








# Напишите программу, которая будет принимать на вход дробь и показывать первую цифру дробной части числа.
# Примеры:
# o	6,78 -> 7
# o	5 -> нет
# o	0,34 -> 3

# num = float(input("Enter number:"))
nnum = list[lambda x: (x*10)%10, float(input("Enter number:"))]
print(nnum)

# или сразу в принте, без доп переменной либо

# num = input("Enter number:").split('.')
# print(int(num[1][0]))